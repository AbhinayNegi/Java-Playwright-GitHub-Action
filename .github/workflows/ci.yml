name: Playwright Automation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests on'
        required: true
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'all'
        type: choice
        options:
          - smoke
          - regression
          - all

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

jobs:
  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Install Playwright browsers
        run: |
          mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install --with-deps"

      - name: Create directories for artifacts
        run: |
          mkdir -p target/screenshots
          mkdir -p target/videos
          mkdir -p target/traces
          mkdir -p target/allure-results

      - name: Run smoke tests
        if: github.event_name == 'push' || github.event.inputs.test_suite == 'smoke'
        run: |
          mvn test -Dbrowser=${{ matrix.browser }} -Dheadless=true -Dgroups=smoke
        continue-on-error: true

      - name: Run regression tests
        if: github.event_name == 'schedule' || github.event.inputs.test_suite == 'regression'
        run: |
          mvn test -Dbrowser=${{ matrix.browser }} -Dheadless=true -Dgroups=regression
        continue-on-error: true

      - name: Run all tests
        if: github.event.inputs.test_suite == 'all'
        run: |
          mvn test -Dbrowser=${{ matrix.browser }} -Dheadless=true
        continue-on-error: true

      - name: Generate Allure Report
        if: always()
        run: |
          mvn allure:report

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-${{ matrix.browser }}
          path: |
            target/screenshots/
            target/videos/
            target/traces/
            target/surefire-reports/
            target/allure-results/
            target/site/allure-maven-plugin/
          retention-days: 30

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: target/allure-results/
          retention-days: 30

  publish-report:
    name: Publish Test Report
    runs-on: ubuntu-latest
    needs: test
    if: always()

    environment:          # ðŸ‘ˆ required for GitHub Pages deployments
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Merge Allure Results
        run: |
          mkdir -p merged-results
          find artifacts -name "allure-results*" -type d -exec cp -r {}/* merged-results/ \; 2>/dev/null || true

      - name: Generate Combined Allure Report
        run: |
          mvn io.qameta.allure:allure-maven:report -Dallure.results.directory=merged-results

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/site/allure-maven-plugin   # ðŸ‘ˆ this is where Allure generates the HTML report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
